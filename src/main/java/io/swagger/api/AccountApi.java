/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.25).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.Deposit;
import io.swagger.model.Withdrawal;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import io.swagger.v3.oas.annotations.responses.ApiResponses;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.bind.annotation.CookieValue;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2021-05-05T13:22:26.114Z[GMT]")
@Validated
public interface AccountApi {

    @Operation(summary = "deposit to another account", description = "", security = {
        @SecurityRequirement(name = "oAuthSample", scopes = {
            "customer",
"employee"        })    }, tags={ "account" })
    @ApiResponses(value = { 
        @ApiResponse(responseCode = "201", description = "deposit done"),
        
        @ApiResponse(responseCode = "400", description = "invalid input, object invalid") })
    @RequestMapping(value = "/account/deposit",
        consumes = { "application/json" }, 
        method = RequestMethod.POST)
    ResponseEntity<Void> deposit(@Parameter(in = ParameterIn.DEFAULT, description = "deposit to create", schema=@Schema()) @Valid @RequestBody Deposit body);


    @Operation(summary = "deposit to another account", description = "", security = {
        @SecurityRequirement(name = "oAuthSample", scopes = {
            "customer",
"employee"        })    }, tags={ "account" })
    @ApiResponses(value = { 
        @ApiResponse(responseCode = "201", description = "withdrawel done"),
        
        @ApiResponse(responseCode = "400", description = "invalid input, object invalid") })
    @RequestMapping(value = "/account/withdrawal",
        consumes = { "application/json" }, 
        method = RequestMethod.POST)
    ResponseEntity<Void> withdrawal(@Parameter(in = ParameterIn.DEFAULT, description = "deposit to create", schema=@Schema()) @Valid @RequestBody Withdrawal body);

}

